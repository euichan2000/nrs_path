<launch>
  <!-- STL 파일 이름 -->
  <arg name="file_name" default="reshaped_testbed.stl" />
  <!-- YAML 파일 로드 -->
  <rosparam file="$(find nrs_ver2)/config/params.yaml" subst_value="true" command="load"/>

  <!-- URDF 로봇 설명을 생성 -->
  <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find nrs_ver2)/urdf/workpiece.xacro' file_name:=$(arg file_name)" />
  <!-- Static TF 설정 -->
  <node pkg="tf2_ros" type="static_transform_publisher" name="base_to_visualized_model"
        args="0 0 0 0 0 0 base_link visualized_model" />

  <!-- Robot State Publisher -->
  <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
    <param name="robot_description" command="$(find xacro)/xacro --inorder '$(find nrs_ver2)/urdf/workpiece.xacro' file_name:=$(arg file_name)" />
  </node>

  <!--clicked_point를 Subscribe하여 표면 위의 Geodesic 작업 경로를 생성하는 노드-->
  <node name="path_generator_node" pkg="nrs_ver2" type="path_generator" output="screen" />
  <!--Rviz 상에 waypoints_interpolator를 통한 최종 경로를 시각화하기 위한 노드-->
  <node name="path_visualizer_node" pkg="nrs_ver2" type="path_visualizer" output="screen" />
  <!--터미널 상에서 여러가지 input을 받고, 각 노드로 커맨드를 뿌려주기 위한 노드-->
  <node name="keyboard_listener_node" pkg="nrs_ver2" type="keyboard_listener" output="screen" />
  <!-- RViz 실행 -->
  <node name="rviz" pkg="rviz" type="rviz" args="-d $(find nrs_ver2)/config/rviz_config.rviz" />
  <!-- Point 시각화-->
  <node name="point_publisher_node" pkg="nrs_ver2" type="point_publisher" output="screen" />
  <!--path_generator를 통해 생성된 작업 경로를 interpolation 및 normal smoothing, 접근,후퇴 경로 추가 등의 후처리하는 노드-->
  <node name="waypoints_interpolator_node" pkg="nrs_ver2" type="waypoints_interpolator" output="screen" />
  <!-- <node name="reshape_stl_node" pkg="nrs_ver2" type="reshape_stl" output="screen" /> -->
  <node name="path_transformer_node" pkg="nrs_ver2" type="path_transformer" output= "screen" />
</launch>
