<launch>
    <!-- 전달받는 인자 -->
    <arg name="file_name" default="reshaped_testbed.stl"/>
    <arg name="robot_description" default="$(find xacro)/xacro --inorder '$(find nrs_ver2)/urdf/cad_model.xacro' file_name:=$(arg file_name)" />

    <!-- 로봇 설정 -->
    <param name="robot_description" command="$(arg robot_description)" />

    <node pkg="tf2_ros" type="static_transform_publisher" name="base_to_visualized_model" args="0 0 0 0 0 0 base_link visualized_model" />

    <node name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" output="screen">
        <param name="robot_description" value="$(arg robot_description)" />
    </node>

    <!-- RViz 실행 -->
    <node name="rviz" pkg="rviz" type="rviz" args="-d $(find nrs_ver2)/config/rviz_config.rviz" />

    <!--clicked_point를
    Subscribe하여 표면 위의 Geodesic 작업 경로를 생성하는 노드-->
    <node name="path_generator_node" pkg="nrs_ver2" type="path_generator" output="screen">
    </node>
    <!--path_generator를
    통해 생성된 작업 경로를 interpolation 및 normal smoothing, 접근,후퇴 경로 추가 등의 후처리하는 노드-->
    <node name="waypoints_interpolator_node" pkg="nrs_ver2" type="waypoints_interpolator" output="screen">
    </node>

    <!-- Point 시각화-->
    <node name="point_visualizer_node" pkg="nrs_ver2" type="point_visualizer" output="screen" />
    <!--터미널
    상에서 여러가지 input을 받고, 각 노드로 커맨드를 뿌려주기 위한 노드-->
    <node name="path_visualizer_node" pkg="nrs_ver2" type="path_visualizer" output="screen" />


</launch>